name: Test and Deploy to Staging

on:
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  test-and-deploy:
    name: Test and Deploy
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out your new repo's code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: NEW - Securely copy app code to server
      # This replaces the 'git pull' logic
      - name: Securely Copy App Files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_SSH_HOST }}
          username: ${{ secrets.STAGING_SSH_USER }}
          password: ${{ secrets.STAGING_SSH_PASSWORD }}
          port: 22
          source: "Task-1/one_fm_google_integration/" # Copies contents of this subfolder
          target: "/home/frappe/frappe-bench/apps/one_fm_google_integration"
          rm: true # Deletes the old app directory on the server first

      # Step 3: Run tests, migrations, and restart
      - name: Run Deploy Commands on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_SSH_HOST }}
          username: ${{ secrets.STAGING_SSH_USER }}
          password: ${{ secrets.STAGING_SSH_PASSWORD }}
          port: 22
          script: |
            set -e
            
            echo "==== 1. Navigating to Bench Directory ===="
            cd ${{ secrets.BENCH_PATH }}
            
            echo "==== 2. Building assets (helps bench recognize app) ===="
            # This step might help resolve the ModuleNotFoundError
            /home/frappe/.local/bin/bench build --app one_fm_google_integration || echo "Build failed, continuing..." 
            # Added '|| true' temporarily in case build itself fails due to app issues

            echo "==== 3. Running Unit Tests ===="
            # First, explicitly enable tests for the site
            /home/frappe/.local/bin/bench --site ${{ secrets.STAGING_SITE_NAME }} set-config allow_tests true
            # Now, run the tests
            /home/frappe/.local/bin/bench --site ${{ secrets.STAGING_SITE_NAME }} run-tests --app one_fm_google_integration
            
            # Step 4: Installing Python dependencies - REMOVED because requirements.txt doesn't exist
            # echo "==== 4. Installing Python dependencies ===="
            # /home/frappe/.local/bin/bench pip install -r apps/one_fm_google_integration/requirements.txt
            
            echo "==== 5. Running Database Migrations ===="
            /home/frappe/.local/bin/bench --site ${{ secrets.STAGING_SITE_NAME }} migrate
            
            echo "==== 6. Restarting Bench Services ===="
            sudo /home/frappe/.local/bin/bench restart
            
            echo "✅ Deployment to staging complete!"

      # Step 4: Send Success Notification
      - name: Send Success Notification
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_HOST }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USER }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "✅ DEPLOYMENT SUCCESS: one_fm_google_integration to Staging"
          to: ${{ secrets.MAIL_TO }}
          from: "GitHub Actions Bot <${{ secrets.MAIL_USER }}>"
          body: |
            Successfully deployed commit ${{ github.sha }} to the staging server.
            Commit by: ${{ github.actor }}
            See commit: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}

      # Step 5: Send Failure Notification
      - name: Send Failure Notification
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_HOST }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USER }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "❌ DEPLOYMENT FAILED: one_fm_google_integration to Staging"
          to: ${{ secrets.MAIL_TO }}
          from: "GitHub Actions Bot <${{ secrets.MAIL_USER }}>"
          body: |
            Failed to deploy commit ${{ github.sha }} to the staging server.
            
            Check the pipeline log for details:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}